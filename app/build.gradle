apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "co.cdmunoz.cryptocurrencyapp"
        minSdkVersion rootProject.ext.minSDKVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField 'String', 'URL', '"https://api.coinmarketcap.com/v1/"'
        }
        release {
            buildConfigField 'String', 'URL', '"https://api.coinmarketcap.com/v1/"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //android libs
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.61"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:${rootProject.ext.appCompatXVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraintLayoutVersion}"
    implementation "androidx.recyclerview:recyclerview:${rootProject.ext.recyclerviewXVersion}"
    implementation "androidx.cardview:cardview:${rootProject.ext.cardviewXVerspon}"
    //moshi
    implementation "com.squareup.moshi:moshi-kotlin:${rootProject.ext.moshiKotlinVersion}"
    implementation "com.squareup.moshi:moshi-adapters:${rootProject.ext.moshiKotlinVersion}"
    //dagger2
    implementation "com.google.dagger:dagger-android:${rootProject.ext.dagger2Version}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.dagger2Version}"
    kapt "com.google.dagger:dagger-android-processor:${rootProject.ext.dagger2Version}"
    //Room
    implementation "androidx.room:room-runtime:${rootProject.ext.rxJava2Version}"
    implementation "androidx.room:room-rxjava2:${rootProject.ext.rxJava2Version}"
    kapt "androidx.room:room-compiler:${rootProject.ext.rxJava2Version}"
    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.archLifecycleVersion}"
    kapt "androidx.lifecycle:lifecycle-compiler:${rootProject.ext.archLifecycleVersion}"

    //RxJava 2 LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:${rootProject.ext.archLifecycleVersion}"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-moshi:${rootProject.ext.moshiConverterVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.rxJavaAdapterVersion}"
    //RxJava RxAndroid
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxJava2Version}"
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxAndroidVersion}"

    //test
    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
    androidTestImplementation "androidx.test:runner:${rootProject.ext.testRunnerVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.testEspressoVersion}"
}
